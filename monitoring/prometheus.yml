# Configuração do Prometheus para CS360 Hub
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'cs360-production'
    replica: 'prometheus-1'

# Configuração de alertas
rule_files:
  - "alerts/*.yml"

# Configuração do Alertmanager
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Jobs de scraping
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    metrics_path: /metrics
    scrape_interval: 15s

  # Node Exporter (métricas do sistema)
  - job_name: 'node-exporter'
    static_configs:
      - targets: 
          - 'localhost:9100'
          - 'node1:9100'
          - 'node2:9100'
    scrape_interval: 15s
    metrics_path: /metrics

  # cAdvisor (métricas de containers)
  - job_name: 'cadvisor'
    static_configs:
      - targets: 
          - 'localhost:8080'
          - 'node1:8080'
          - 'node2:8080'
    scrape_interval: 15s
    metrics_path: /metrics

  # CS360 Hub Application Metrics
  - job_name: 'cs360-hub'
    static_configs:
      - targets: ['cs360-hub:3001']  # Assuming app exposes metrics on :3001
    scrape_interval: 30s
    metrics_path: /api/metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '(.+):.*'
        replacement: '${1}'

  # Nginx/Load Balancer Metrics
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx:9113']
    scrape_interval: 30s

  # Database Metrics (PostgreSQL/Supabase)
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s

  # Redis Metrics (if using Redis)
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s

  # Kubernetes Metrics (if using K8s)
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
    - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
    - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
      action: keep
      regex: default;kubernetes;https

  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
    - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

  # Blackbox Exporter (health checks)
  - job_name: 'blackbox-http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
          - https://cs360hub.com
          - https://cs360hub.com/health
          - https://cs360hub.com/api/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # SSL Certificate Expiry Monitoring
  - job_name: 'ssl-expiry'
    metrics_path: /probe
    params:
      module: [tcp_connect]
    static_configs:
      - targets:
          - cs360hub.com:443
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

# Configuração de armazenamento
storage:
  tsdb:
    path: /prometheus/data
    retention.time: 30d
    retention.size: 50GB
  
# Configurações remotas (para backup/replicação)
remote_write:
  - url: "https://prometheus-remote-write-endpoint.com/api/v1/write"
    headers:
      Authorization: "Bearer YOUR_TOKEN_HERE"
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500

